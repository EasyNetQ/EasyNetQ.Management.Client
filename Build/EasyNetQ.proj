<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="Default">
    <PropertyGroup>
        <BaseDir>$(MSBuildProjectDirectory)\..</BaseDir>
        <OutputDir>$(BaseDir)\bin</OutputDir>
        <Tools>$(BaseDir)\Tools</Tools>
        <MSBuildCommunityTasksPath>$(Tools)\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
        <Nunit>$(Tools)\NUnit\2.5</Nunit>
        <NuGet>$(Tools)\NuGet</NuGet>
        <Package>$(BaseDir)\Package</Package>
        <Source>$(BaseDir)\Source</Source>
        <ILRepack>$(Tools)\ILRepack\ILRepack.exe</ILRepack>
        <BuildNumber Condition=" '$(APPVEYOR_BUILD_NUMBER)' != '' ">$(APPVEYOR_BUILD_NUMBER)</BuildNumber>
        <BuildNumber Condition=" '$(BUILD_NUMBER)' != '' ">$(BUILD_NUMBER)</BuildNumber>
        <BuildNumber Condition=" '$(BuildNumber)' == '' ">0</BuildNumber>
    </PropertyGroup>
    
    <!-- Properties that are set during build to find test/merge binaries -->
    <PropertyGroup>
        <Configuration>Release</Configuration>
        <DesktopFrameworkVersion>net451</DesktopFrameworkVersion>
        <BinaryDesktopFolder>bin\$(Configuration)\$(DesktopFrameworkVersion)</BinaryDesktopFolder>
    </PropertyGroup>

    <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

    <Target Name="Default" DependsOnTargets="Version; Build; Test; PackageManagementClient" />

    <Target Name="Version">
        <FileUpdate Files="$(Source)\Version.cs"
            Regex="AssemblyVersion\(&quot;(\d+)\.(\d+)\.(\d+)\.(\d+)&quot;\)"
            ReplacementText="AssemblyVersion(&quot;$1.$2.$3.$(BuildNumber)&quot;)" />
    </Target>

    <ItemGroup>
        <ProjectToBuild Include="$(Source)\EasyNetQ.sln">
            <Properties>OutputPath=$(OutputDir);Configuration=$(Configuration)</Properties>
        </ProjectToBuild>
    </ItemGroup>

    <Target Name="Build" DependsOnTargets="Version">
        <MSBuild Projects="@(ProjectToBuild)" Targets="Clean;Rebuild"/>
    </Target>

    <!-- Running xUnit tests using dotnet test. Running tests that are not
        Integration tests. Continuing on error so that all of the test binaries
        can run. This allows us to see all of the test results in AppVeyor if
        there are multiple test suites failing. -->
    <Target Name="Test" DependsOnTargets="Build">
        <ItemGroup>
            <TestProjects Include="$(Source)\*Tests\project.json" />
        </ItemGroup>

        <Exec WorkingDirectory="%(TestProjects.RootDir)\%(TestProjects.Directory)"
              Command='dotnet test -notrait "Category=Integration"'
              ContinueOnError="ErrorAndContinue" />
    </Target>

    <Target Name="PackageManagementClient" DependsOnTargets="Test">
        <PropertyGroup>
            <NuGetPackageDirectory>$(Package)\EasyNetQ.Management.Client</NuGetPackageDirectory>
        </PropertyGroup>

        <ItemGroup>
            <ClientLibraries Include="$(Source)\**\project.json" Exclude="$(Source)\*Tests\project.json" />
            <FilesToDelete Include="$(NuGetPackageDirectory)\*.nupkg" />
        </ItemGroup>

        <MakeDir Directories="$(NuGetPackageDirectory)" Condition="!Exists('$(NuGetPackageDirectory)')" />
        <Delete Files="@(FilesToDelete)" />
        <Exec Command='dotnet pack %(ClientLibraries.FullPath) --output $(NuGetPackageDirectory)' />
    </Target>
</Project>